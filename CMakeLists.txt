cmake_minimum_required(VERSION 3.0)

set(PROJECT_NAME dagmc_basics)
message(STATUS "CMAKE Compiler is:" ${CMAKE_CXX_COMPILER})

project(${PROJECT_NAME} VERSION 0.0.0 LANGUAGES CXX)
set (CMAKE_CXX_STANDARD 17)
#set (CMAKE_CXX_CLANG_TIDY 
#     clang-tidy;
#     -checks=*)
set(CMAKE_CXX_LINK_EXECUTABLE "${CMAKE_CXX_LINK_EXECUTABLE} -lpthread")

#find_package(openMP REQUIRED)
#find_package(MPI REQUIRED)

message(STATUS "Looking for DAGMC...")

if(DAGMC_DIR) 
   find_package(DAGMC REQUIRED NAMES DAGMC HINTS "${DAGMC_DIR}" 
		"${DAGMC_DIR}/lib/cmake/dagmc" NO_DEFAULT PATH)
else()
find_package(DAGMC REQUIRED lib/cmake)
endif()
message(STATUS "Found DAGMC config in: ${DAGMC_DIR}")

message(STATUS "DAGMC_INCLUDE_DIRS is set to: ${DAGMC_INCLUDE_DIRS}")
message(STATUS "DAGMC_LIBRARIES is set to: ${DAGMC_LIBRARIES}")

## put all targets in bin
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/bin)
## put all libraries in lib
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/lib)

if(CMAKE_BUILD_TYPE STREQUAL "TESTING")
  set(BUILD_TYPE_COMPILE_FLAGS "-g;-O0;--coverage;")
  set(TEST_LIBRARIES "gcov")
  message(STATUS "BUILD_TYPE SET TO TESTING")

elseif(CMAKE_BUILD_TYPE STREQUAL "DEBUG")
  set(BUILD_TYPE_COMPILE_FLAGS "-g;-O0;")
  set(TEST_LIBRARIES "")
  message(STATUS "BUILD_TYPE SET TO DEBUG")

elseif(CMAKE_BUILD_TYPE STREQUAL "RELEASE")
  set(BUILD_TYPE_COMPILE_FLAGS "-O2")
  set(TEST_LIBRARIES "")
  message(STATUS "BUILD_TYPE SET TO RELEASE")

elseif(CMAKE_BUILD_TYPE STREQUAL "PROFILING")
  set(BUILD_TYPE_COMPILE_FLAGS "-g;-O0;")
  set(TEST_LIBRARIES "")
  set (CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -pg")
  set (CMAKE_EXE_LINKER_FLAGS_DEBUG "${CMAKE_LINKER_FLAGS_DEBUG} -pg")
  message(STATUS "BUILD_TYPE SET TO PROFILING")

elseif(CMAKE_BUILD_TYPE STREQUAL "ADDRESS-SANITIZE")
  set(BUILD_TYPE_COMPILE_FLAGS "-g;-O0;")
  set(TEST_LIBRARIES "")  
  set (CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -fno-omit-frame-pointer -fsanitize=address")
  set (CMAKE_LINKER_FLAGS_DEBUG "${CMAKE_LINKER_FLAGS_DEBUG} -fno-omit-frame-pointer -fsanitize=address")
  message(STATUS "BUILD_TYPE SET TO ADDRESS-SANITIZE")

endif()

message(STATUS "BUILD_TYPE_COMPILE_FLAGS" ${BUILD_TYPE_COMPILE_FLAGS})

add_subdirectory(src)
